package core

import "github.com/bsagat/bereke-merchant-api/models/types"

// ------------------------------------------------------------
// Базовая структура заказа
// ------------------------------------------------------------

type Order struct {
	// Идентификатор заказа в системе мерчанта (вашей системе)
	OrderNumber string

	// Сумма заказа в обычных единицах валюты
	Amount float64

	// Код валюты по стандарту ISO 4217
	// Например: 643 — RUB, 840 — USD
	Currency int

	// URL, на который будет перенаправлен пользователь после успешной оплаты
	ReturnURL string

	// URL, на который будет перенаправлен пользователь в случае ошибки или отмены
	FailURL string

	// Описание заказа (может отображаться пользователю или в отчетах)
	Description string

	// Язык интерфейса оплаты (ISO 639-1: ru, en, by, kz, kk)
	Language string

	// Время жизни сессии оплаты в секундах
	SessionTimeoutSecs int

	// Дата и время, когда заказ перестанет быть доступен для оплаты
	// Формат: YYYY-MM-DDThh:mm:ss
	ExpirationDate string

	// Дополнительные возможности платежа (определяется в types.PaymentFeature)
	Features types.PaymentFeature

	// Комиссия, которую вводит мерчант (если применяется)
	FeeInput int
}

// ------------------------------------------------------------
// Запрос на регистрацию заказа
// ------------------------------------------------------------

type RegisterOrderRequest struct {
	Order

	// Информация о клиенте
	IP             string // IP-адрес клиента
	ClientId       string // Идентификатор клиента в вашей системе
	CardholderName string // Имя держателя карты
	Email          string // Email клиента

	// Детали платежа
	BindingId string // Идентификатор привязки карты

	// Дополнительная информация
	PostAddress        string // Почтовый адрес клиента
	DynamicCallbackURL string // URL для динамического колбэка (заменяет статичный)
}

// ------------------------------------------------------------
// Запрос на возврат средств
// ------------------------------------------------------------

type RefundOrderRequest struct {
	OrderID string // Номер заказа в платежном шлюзе

	// Сумма возврата в обычных единицах валюты
	Amount float64

	// Код валюты платежа (ISO 4217)
	Currency int

	// Язык ответа (ISO 639-1)
	Language string

	// Дополнительные данные в формате JSON
	JSONParams string

	// Для определения повторного запроса возврата (чтобы избежать дублирования)
	ExpectedDepositedAmount int

	// Внешний идентификатор возврата (уникальный в системе мерчанта)
	ExternalRefundID string
}

// ------------------------------------------------------------
// Запрос на получение статуса заказа
// ------------------------------------------------------------

type OrderStatusRequest struct {
	// Обязательное поле — либо orderId, либо orderNumber.
	// Приоритет — orderId.
	OrderID     string // Идентификатор заказа в шлюзе [1..36]
	OrderNumber string // Идентификатор заказа у мерчанта [1..36]

	// Необязательные поля
	Language      string // Язык ответа (ISO 639-1: ru,en,by,kz,kk)
	MerchantLogin string // Логин мерчанта [1..255]
}

// ------------------------------------------------------------
// Запрос на сторнирование (отмену проведенного платежа)
// ------------------------------------------------------------

type ReversalOrderRequest struct {
	OrderID     string  // Номер заказа в платежном шлюзе
	OrderNumber string  // Номер заказа в системе мерчанта
	Amount      float64 // Сумма отмены
	Currency    int     // Код валюты платежа (ISO 4217)

	// Дополнительно можно указать:
	Language      string // Язык ответа
	JSONParams    string // Дополнительные параметры в JSON
	MerchantLogin string // Логин мерчанта (для отмены от его имени)
}

// ------------------------------------------------------------
// Запрос на отмену заказа
// ------------------------------------------------------------

type CancelOrderRequest struct {
	OrderID     string // Номер заказа в платежном шлюзе
	OrderNumber string // Номер заказа в системе мерчанта
	Language    string // Язык ответа (ISO 639-1)
}
